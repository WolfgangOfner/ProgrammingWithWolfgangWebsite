<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://www.programmingwithwolfgang.com/</id><title>Programming With Wolfgang</title><subtitle>A tech blog focusing on DevOps, Cloud, Azure, Kubernetes and Software Architecture.</subtitle> <updated>2021-03-17T14:41:18+01:00</updated> <author> <name>Wolfgang Ofner</name> <uri>https://www.programmingwithwolfgang.com/</uri> </author><link rel="self" type="application/atom+xml" href="https://www.programmingwithwolfgang.com/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://www.programmingwithwolfgang.com/"/> <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator> <rights> © 2021 Wolfgang Ofner </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Automatically deploy Database Changes with SSDT</title><link href="https://www.programmingwithwolfgang.com/automatically-deploy-database-changes/" rel="alternate" type="text/html" title="Automatically deploy Database Changes with SSDT" /><published>2021-03-08T00:00:00+01:00</published> <updated>2021-03-08T00:00:00+01:00</updated> <id>https://www.programmingwithwolfgang.com/automatically-deploy-database-changes/</id> <content src="https://www.programmingwithwolfgang.com/automatically-deploy-database-changes/" /> <author> <name>Wolfgang Ofner</name> </author> <category term="DevOps" /> <summary> In my last post, I talked about deploying database changes automatically. Today, I will show how to use SSDT (SQS Server Data Tools) to generate a Dacpac package and how to deploy it to your SQL server. Prepare your Environment Before you can get started, you have to download the custom SSDT Tools from Github. These custom tools are necessary to be able to open the SSDT project file (*.sqlpro... </summary> </entry> <entry><title>Automate Database Deployments</title><link href="https://www.programmingwithwolfgang.com/automate-database-deployments/" rel="alternate" type="text/html" title="Automate Database Deployments" /><published>2021-03-01T00:00:00+01:00</published> <updated>2021-03-15T22:20:21+01:00</updated> <id>https://www.programmingwithwolfgang.com/automate-database-deployments/</id> <content src="https://www.programmingwithwolfgang.com/automate-database-deployments/" /> <author> <name>Wolfgang Ofner</name> </author> <category term="DevOps" /> <summary> DevOps has been around for some years now and most developers know what it means. In simple terms, it stands for a culture where you automate all your steps from code merges to tests and deployment. Doing this for an application is often quite simple. It gets way harder when database changes are involved though. In this post, I will show you three ways how to automatically apply your changes a... </summary> </entry> <entry><title>Replace Helm Chart Variables in your CI/CD Pipeline with Tokenizer</title><link href="https://www.programmingwithwolfgang.com/replace-helm-variables-tokenizer/" rel="alternate" type="text/html" title="Replace Helm Chart Variables in your CI/CD Pipeline with Tokenizer" /><published>2021-02-22T00:00:00+01:00</published> <updated>2021-02-22T00:00:00+01:00</updated> <id>https://www.programmingwithwolfgang.com/replace-helm-variables-tokenizer/</id> <content src="https://www.programmingwithwolfgang.com/replace-helm-variables-tokenizer/" /> <author> <name>Wolfgang Ofner</name> </author> <category term="DevOps" /> <category term="Kubernetes" /> <summary> Helm is a great tool to deploy your application into Kubernetes. In my post, Helm - Getting Started, I also mentioned the values.yaml file which can be used to replace variables in the Helm chart. The problem with this approach is that the values.yaml file is hard-coded. In this post, I want to introduce Tokenizer which is a simple Azure DevOps extension with which you can replace variables in... </summary> </entry> <entry><title>Auto-scale in Kubernetes using the Horizontal Pod Autoscaler</title><link href="https://www.programmingwithwolfgang.com/auto-scale-kubernetes-hpa/" rel="alternate" type="text/html" title="Auto-scale in Kubernetes using the Horizontal Pod Autoscaler" /><published>2021-02-15T00:00:00+01:00</published> <updated>2021-02-15T00:00:00+01:00</updated> <id>https://www.programmingwithwolfgang.com/auto-scale-kubernetes-hpa/</id> <content src="https://www.programmingwithwolfgang.com/auto-scale-kubernetes-hpa/" /> <author> <name>Wolfgang Ofner</name> </author> <category term="Kubernetes" /> <category term="DevOps" /> <summary> Running a performant, resilient application in the pre-cloud era was hard. Especially with unpredictable user traffic, it was often necessary to use more hardware than needed, just to make sure the application can handle an increased load. Kubernetes makes our life a lot easier and can automatically scale your application out and in, depending on the usage of your application. Today, I will sh... </summary> </entry> <entry><title>Manage Resources in Kubernetes</title><link href="https://www.programmingwithwolfgang.com/manage-resources-kubernetes/" rel="alternate" type="text/html" title="Manage Resources in Kubernetes" /><published>2021-02-08T00:00:00+01:00</published> <updated>2021-02-18T13:15:55+01:00</updated> <id>https://www.programmingwithwolfgang.com/manage-resources-kubernetes/</id> <content src="https://www.programmingwithwolfgang.com/manage-resources-kubernetes/" /> <author> <name>Wolfgang Ofner</name> </author> <category term="Kubernetes" /> <category term="DevOps" /> <summary> Kubernetes is a great tool but it also has a steep learning curve. Today, I want to talk about how to limit the resources a container can use and how containers can request a minimum of resources on a node in the Kubernetes cluster. Resource Requests vs. Resource Limits Resource requests describe how many resources, for example, CPU or RAM a node has to have. If a node doesn’t satisfy the req... </summary> </entry> </feed>
