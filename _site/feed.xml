

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://www.programmingwithwolfgang.com/</id>
  <title>Programming With Wolfgang</title>
  <subtitle>A tech blog focusing on DevOps, Cloud, Azure, Kubernetes and Software Architecture.</subtitle>
  <updated>2021-01-21T23:48:10+01:00</updated>
  <author>
    <name>Wolfgang Ofner</name>
    <uri>https://www.programmingwithwolfgang.com/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://www.programmingwithwolfgang.com/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://www.programmingwithwolfgang.com/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.0">Jekyll</generator>
  <rights> © 2021 Wolfgang Ofner </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Approvals for YAML Pipelines in Azure DevOps</title>
    <link href="https://www.programmingwithwolfgang.com/deployment-approvals-yaml-pipeline/" rel="alternate" type="text/html" title="Approvals for YAML Pipelines in Azure DevOps" />
    <published>2021-01-21T00:00:00+01:00</published>
  
    <updated>2021-01-21T00:00:00+01:00</updated>
  
    <id>https://www.programmingwithwolfgang.com/deployment-approvals-yaml-pipeline/</id>
    <content src="https://www.programmingwithwolfgang.com/deployment-approvals-yaml-pipeline/" />
    <author>
      <name>Wolfgang Ofner</name>
    </author>

  
    
    <category term="DevOps" />
    
  

  
    <summary>
      





      DevOps is all about automation and making the process faster and more reliable. Sometimes a human must check a change or feature before it is deployed. This could be someone from QA or even marketing checking if the new design is as they wanted. Adding approvals in the classic (old) editor in Azure DevOps is pretty simple but it’s not as straightforward with the new YAML pipelines.

In this pos...
    </summary>
  

  </entry>

  
  <entry>
    <title>Publish NuGet Packages to Nuget.org using Azure DevOps Pipelines</title>
    <link href="https://www.programmingwithwolfgang.com/azure-devops-publish-nuget/" rel="alternate" type="text/html" title="Publish NuGet Packages to Nuget.org using Azure DevOps Pipelines" />
    <published>2021-01-18T00:00:00+01:00</published>
  
    <updated>2021-01-18T00:00:00+01:00</updated>
  
    <id>https://www.programmingwithwolfgang.com/azure-devops-publish-nuget/</id>
    <content src="https://www.programmingwithwolfgang.com/azure-devops-publish-nuget/" />
    <author>
      <name>Wolfgang Ofner</name>
    </author>

  
    
    <category term="DevOps" />
    
  

  
    <summary>
      





      In my last posts, I published my NuGet package to a private NuGet feed. This is a good solution if you want to use your NuGet packages only internally. If you want to share them, you need a public NuGet feed. The by far biggest one (also the default feed) is nuget.org.

In this post, I will extend my previously created Azure DevOps pipeline and deploy the NuGet package to nuget.org so everyone ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Restore NuGet Packages from a Private Feed when building Docker Containers</title>
    <link href="https://www.programmingwithwolfgang.com/restore-nuget-inside-docker/" rel="alternate" type="text/html" title="Restore NuGet Packages from a Private Feed when building Docker Containers" />
    <published>2021-01-11T00:00:00+01:00</published>
  
    <updated>2021-01-11T00:00:00+01:00</updated>
  
    <id>https://www.programmingwithwolfgang.com/restore-nuget-inside-docker/</id>
    <content src="https://www.programmingwithwolfgang.com/restore-nuget-inside-docker/" />
    <author>
      <name>Wolfgang Ofner</name>
    </author>

  
    
    <category term="Docker" />
    
    <category term="DevOps" />
    
  

  
    <summary>
      





      In my last posts, I created a private NuGet feed and automatically uploaded a NuGet package with my Azure DevOps pipeline. Using Visual Studio to restore the NuGet package from the private feed works fine because my user has access to the feed. When I try to restore the package when building a Docker image, it will crash with a 401 Unauthorized error.


  
  
  
   The Docker build failed
  


...
    </summary>
  

  </entry>

  
  <entry>
    <title>Publish to an Internal NuGet Feed in Azure DevOps</title>
    <link href="https://www.programmingwithwolfgang.com/publish-internal-nuget-feed/" rel="alternate" type="text/html" title="Publish to an Internal NuGet Feed in Azure DevOps" />
    <published>2021-01-04T00:00:00+01:00</published>
  
    <updated>2021-01-04T00:00:00+01:00</updated>
  
    <id>https://www.programmingwithwolfgang.com/publish-internal-nuget-feed/</id>
    <content src="https://www.programmingwithwolfgang.com/publish-internal-nuget-feed/" />
    <author>
      <name>Wolfgang Ofner</name>
    </author>

  
    
    <category term="DevOps" />
    
  

  
    <summary>
      





      In my last posts, I showed how to create NuGet packages in Azure DevOps pipelines. To easily distribute them, you have to publish these NuGet packages to a NuGet feed. This can be done by using nuget.org  which is publicly accessible or you can use a private one in Azure DevOps.

In this post, I will show how to create a private NuGet feed in Azure DevOps and how to automatically publish your N...
    </summary>
  

  </entry>

  
  <entry>
    <title>Create NuGet Packages in Azure DevOps Pipelines</title>
    <link href="https://www.programmingwithwolfgang.com/create-nuget-azure-devops/" rel="alternate" type="text/html" title="Create NuGet Packages in Azure DevOps Pipelines" />
    <published>2020-12-28T00:00:00+01:00</published>
  
    <updated>2021-01-03T18:24:37+01:00</updated>
  
    <id>https://www.programmingwithwolfgang.com/create-nuget-azure-devops/</id>
    <content src="https://www.programmingwithwolfgang.com/create-nuget-azure-devops/" />
    <author>
      <name>Wolfgang Ofner</name>
    </author>

  
    
    <category term="DevOps" />
    
  

  
    <summary>
      





      I think the most important rule of a microservice is that it has to be deployed independently. When your project or company grows, it is very likely that you want to share code between projects or microservices. This leads to the question of how to share the code? Should you copy it into your microservice, reference dlls, or should every team develop its own code independently?

In this post, I...
    </summary>
  

  </entry>

</feed>


